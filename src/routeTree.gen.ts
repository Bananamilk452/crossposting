/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { ServerRoute as CallbackTwitterServerRouteImport } from './routes/callback/twitter'
import { ServerRoute as CallbackMisskeyServerRouteImport } from './routes/callback/misskey'
import { ServerRoute as CallbackBlueskyServerRouteImport } from './routes/callback/bluesky'
import { ServerRoute as AuthJwksServerRouteImport } from './routes/auth/jwks'
import { ServerRoute as AuthClientMetadataServerRouteImport } from './routes/auth/client-metadata'

const rootServerRouteImport = createServerRootRoute()

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const CallbackTwitterServerRoute = CallbackTwitterServerRouteImport.update({
  id: '/callback/twitter',
  path: '/callback/twitter',
  getParentRoute: () => rootServerRouteImport,
} as any)
const CallbackMisskeyServerRoute = CallbackMisskeyServerRouteImport.update({
  id: '/callback/misskey',
  path: '/callback/misskey',
  getParentRoute: () => rootServerRouteImport,
} as any)
const CallbackBlueskyServerRoute = CallbackBlueskyServerRouteImport.update({
  id: '/callback/bluesky',
  path: '/callback/bluesky',
  getParentRoute: () => rootServerRouteImport,
} as any)
const AuthJwksServerRoute = AuthJwksServerRouteImport.update({
  id: '/auth/jwks',
  path: '/auth/jwks',
  getParentRoute: () => rootServerRouteImport,
} as any)
const AuthClientMetadataServerRoute =
  AuthClientMetadataServerRouteImport.update({
    id: '/auth/client-metadata',
    path: '/auth/client-metadata',
    getParentRoute: () => rootServerRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/'
  id: '__root__' | '/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
}
export interface FileServerRoutesByFullPath {
  '/auth/client-metadata': typeof AuthClientMetadataServerRoute
  '/auth/jwks': typeof AuthJwksServerRoute
  '/callback/bluesky': typeof CallbackBlueskyServerRoute
  '/callback/misskey': typeof CallbackMisskeyServerRoute
  '/callback/twitter': typeof CallbackTwitterServerRoute
}
export interface FileServerRoutesByTo {
  '/auth/client-metadata': typeof AuthClientMetadataServerRoute
  '/auth/jwks': typeof AuthJwksServerRoute
  '/callback/bluesky': typeof CallbackBlueskyServerRoute
  '/callback/misskey': typeof CallbackMisskeyServerRoute
  '/callback/twitter': typeof CallbackTwitterServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/auth/client-metadata': typeof AuthClientMetadataServerRoute
  '/auth/jwks': typeof AuthJwksServerRoute
  '/callback/bluesky': typeof CallbackBlueskyServerRoute
  '/callback/misskey': typeof CallbackMisskeyServerRoute
  '/callback/twitter': typeof CallbackTwitterServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths:
    | '/auth/client-metadata'
    | '/auth/jwks'
    | '/callback/bluesky'
    | '/callback/misskey'
    | '/callback/twitter'
  fileServerRoutesByTo: FileServerRoutesByTo
  to:
    | '/auth/client-metadata'
    | '/auth/jwks'
    | '/callback/bluesky'
    | '/callback/misskey'
    | '/callback/twitter'
  id:
    | '__root__'
    | '/auth/client-metadata'
    | '/auth/jwks'
    | '/callback/bluesky'
    | '/callback/misskey'
    | '/callback/twitter'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  AuthClientMetadataServerRoute: typeof AuthClientMetadataServerRoute
  AuthJwksServerRoute: typeof AuthJwksServerRoute
  CallbackBlueskyServerRoute: typeof CallbackBlueskyServerRoute
  CallbackMisskeyServerRoute: typeof CallbackMisskeyServerRoute
  CallbackTwitterServerRoute: typeof CallbackTwitterServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/callback/twitter': {
      id: '/callback/twitter'
      path: '/callback/twitter'
      fullPath: '/callback/twitter'
      preLoaderRoute: typeof CallbackTwitterServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/callback/misskey': {
      id: '/callback/misskey'
      path: '/callback/misskey'
      fullPath: '/callback/misskey'
      preLoaderRoute: typeof CallbackMisskeyServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/callback/bluesky': {
      id: '/callback/bluesky'
      path: '/callback/bluesky'
      fullPath: '/callback/bluesky'
      preLoaderRoute: typeof CallbackBlueskyServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/auth/jwks': {
      id: '/auth/jwks'
      path: '/auth/jwks'
      fullPath: '/auth/jwks'
      preLoaderRoute: typeof AuthJwksServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/auth/client-metadata': {
      id: '/auth/client-metadata'
      path: '/auth/client-metadata'
      fullPath: '/auth/client-metadata'
      preLoaderRoute: typeof AuthClientMetadataServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  AuthClientMetadataServerRoute: AuthClientMetadataServerRoute,
  AuthJwksServerRoute: AuthJwksServerRoute,
  CallbackBlueskyServerRoute: CallbackBlueskyServerRoute,
  CallbackMisskeyServerRoute: CallbackMisskeyServerRoute,
  CallbackTwitterServerRoute: CallbackTwitterServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
